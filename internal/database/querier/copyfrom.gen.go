// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.gen.go

package querier

import (
	"context"
)

// iteratorForInsertCandles implements pgx.CopyFromSource.
type iteratorForInsertCandles struct {
	rows                 []InsertCandlesParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertCandles) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertCandles) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Pair,
		r.rows[0].Start,
		r.rows[0].PriceOpen,
		r.rows[0].PriceClose,
		r.rows[0].PriceLow,
		r.rows[0].PriceHigh,
		r.rows[0].Volume,
	}, nil
}

func (r iteratorForInsertCandles) Err() error {
	return nil
}

func (q *Queries) InsertCandles(ctx context.Context, arg []InsertCandlesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"candles"}, []string{"pair", "start", "price_open", "price_close", "price_low", "price_high", "volume"}, &iteratorForInsertCandles{rows: arg})
}
